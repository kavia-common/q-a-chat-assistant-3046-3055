{"is_source_file": true, "format": "TypeScript", "description": "This file defines the QuestionDataService, an Angular service responsible for managing question feed data, including refresh and add operations, and subscribing to app-level events for new questions.", "external_files": ["./api.service", "../models/qa.models", "./event-bus.service"], "external_methods": ["ApiService.getQuestions", "ApiService.addQuestion", "EventBusService.on"], "published": ["QuestionDataService"], "classes": [{"name": "QuestionDataService", "description": "An Angular service that manages question feed data, supports refresh and add operations, and listens for new question events."}], "methods": [{"name": "refresh", "description": "Loads questions from the API and updates the internal questions signal."}, {"name": "addQuestion", "description": "Adds a new question via the API and updates the questions list."}], "calls": ["this.api.getQuestions", "this.api.addQuestion", "this.bus.on"], "search-terms": ["QuestionDataService", "Angular service", "question feed", "refresh questions", "add question", "EventBus", "Question model"], "state": 2, "file_id": 23, "knowledge_revision": 98, "git_revision": "", "revision_history": [{"51": ""}, {"98": ""}], "ctags": [{"_type": "tag", "name": "QuestionDataService", "path": "/home/kavia/workspace/code-generation/q-a-chat-assistant-3046-3055/frontend_app/src/app/services/question-data.service.ts", "pattern": "/^export class QuestionDataService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "questions", "path": "/home/kavia/workspace/code-generation/q-a-chat-assistant-3046-3055/frontend_app/src/app/services/question-data.service.ts", "pattern": "/^  readonly questions = signal<Question[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "QuestionDataService", "scopeKind": "class"}], "hash": "0ce5493a0c42e9997ce4773ceb21c941", "format-version": 4, "code-base-name": "frontend_app", "filename": "frontend_app/src/app/services/question-data.service.ts", "fields": [{"name": "readonly questions = signal<Question[]>([]);", "scope": "QuestionDataService", "scopeKind": "class", "description": "unavailable"}]}